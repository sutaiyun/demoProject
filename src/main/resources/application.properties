server.port = 8081

my.name=sutaiyun
my.phone=12345678

mybatis.config-location=classpath:mybatis-config.xml
#mybatis.config-location=classpath:com/example/mapper/*.xml
#mybatis.config-location=classpath:mapper/*.xml

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url: jdbc:mysql://192.168.10.13:3306/test
spring.datasource.username=root
spring.datasource.password=su1234
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

demo.project.static.web.path=classpath:web/
#spring.mvc.view.prefix=/templates/
spring.mvc.view.suffix=.ftl

kafka.broker.address = 192.168.10.13:9092
kafka.zookeeper.connect: 192.168.10.13:2181
kafka.topic: test
kafka.messageKey: test-key

kafka.consumer.group-id = test-group-1
kafka.consumer.group-id-2 = test-group-2
